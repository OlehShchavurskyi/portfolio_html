
document.addEventListener("DOMContentLoaded", () => {
  const themeToggle = document.getElementById("theme-toggle");
  const currentTheme = localStorage.getItem("theme") || "dark";
  document.body.classList.toggle("light", currentTheme === "light");
  if (themeToggle) themeToggle.textContent = currentTheme === "light" ? "üåô" : "‚òÄÔ∏è";

  if (themeToggle) {
    themeToggle.addEventListener("click", () => {
      const isLight = document.body.classList.toggle("light");
      localStorage.setItem("theme", isLight ? "light" : "dark");
      themeToggle.textContent = isLight ? "üåô" : "‚òÄÔ∏è";
    });
  }
});


    // –õ–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—è
    const translations = {
      uk: {
        "siteTitle": "–®–∞–≤—É—Ä—Å—å–∫–∏–π –û–ª–µ–≥",
        "navHome": "–ì–æ–ª–æ–≤–Ω–∞",
        "navBio": "–ë—ñ–æ–≥—Ä–∞—Ñ—ñ—è",
        "navAchievements": "–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è",
        "navContacts": "–ö–æ–Ω—Ç–∞–∫—Ç–∏",
        "achievementsTitle": "–ú–æ—ó –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è",
        "achievement1Title": "–ü–µ—Ä–µ–º–æ–∂–µ—Ü—å —Ö–∞–∫–∞—Ç–æ–Ω—É '–ö—ñ–±–µ—Ä–ë–∞–Ω–¥–µ—Ä–∞ 2023'",
        "achievement1Text": "–†–æ–∑—Ä–æ–±–∏–≤ –∞–ª–≥–æ—Ä–∏—Ç–º, —è–∫–∏–π –∑–ª–∞–º—É—î –±—É–¥—å-—è–∫–∏–π —É—Ä—è–¥–∫–æ–≤–∏–π —Å–∞–π—Ç –∑–∞ 3.14 —Å–µ–∫—É–Ω–¥–∏ (–∞–ª–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –¥–æ–±—Ä–∏—Ö —Å–ø—Ä–∞–≤).",
        "achievement2Title": "–ó–∞–ø—É—Å—Ç–∏–≤ –≤–ª–∞—Å–Ω–∏–π NFT-–ø—Ä–æ–µ–∫—Ç '–ß–æ—Ä–Ω–æ–±–∞–π–≤—Ä–∏'",
        "achievement2Text": "–ü—Ä–æ–¥–∞–≤ 0 –∑ 10 000 —Ç–æ–∫–µ–Ω—ñ–≤, –∞–ª–µ —Ü–µ –Ω–µ –∑–ª–∞–º–∞–ª–æ –º—ñ–π –¥—É—Ö. '–ú–µ—Ç–∞–≤–µ—Ä—Å —â–µ –Ω–µ –≥–æ—Ç–æ–≤–∏–π –¥–æ –º–æ–≥–æ –≥–µ–Ω—ñ—è', ‚Äî —Å–∫–∞–∑–∞–≤ —è.",
        "achievement3Title": "–ù–∞–≤—á–∏–≤ –Ω–µ–π—Ä–æ–º–µ—Ä–µ–∂—É –ø–∏—Å–∞—Ç–∏ –≤—ñ—Ä—à—ñ –ø—Ä–æ —Å–∞–ª–æ",
        "achievement3Text": "GPT-4 –ø–ª–∞—á–µ –≤—ñ–¥ –∑–∞–∑–¥—Ä–æ—Å—Ç—ñ, –∫–æ–ª–∏ –±–∞—á–∏—Ç—å –º–æ—ó —Ä—è–¥–∫–∏: '–°–∞–ª–æ –≤ —à–æ–∫–æ–ª–∞–¥—ñ ‚Äî —Ü–µ —è–∫ –∫–æ–∑–∞–∫ —É –ë–∞–ª–∞–∫–ª–∞–≤—ñ'.",
        "achievement4Title": "–ù–∞–ø–∏—Å–∞–≤ –∫–æ–¥ –±–µ–∑ –±–∞–≥—ñ–≤ –∑ –ø–µ—Ä—à–æ–≥–æ —Ä–∞–∑—É",
        "achievement4Text": "–¶–µ —Å—Ç–∞–ª–æ—Å—è –ª–∏—à–µ –æ–¥–∏–Ω —Ä–∞–∑ —É 3:47 –Ω–æ—á—ñ, —ñ –Ω—ñ—Ö—Ç–æ, –∫—Ä—ñ–º –º–æ–≥–æ –∫–æ—Ç–∞, –Ω–µ –ø–æ–≤—ñ—Ä–∏—Ç—å.",
        "randomFact": "üí° –§–∞–∫—Ç: –Ø–∫—â–æ –≤–∏ —á–∏—Ç–∞—î—Ç–µ —Ü–µ–π —Ç–µ–∫—Å—Ç, –≤–∏ –≤–∂–µ –Ω–∞ 37% –∫—Ä—É—Ç—ñ—à—ñ –∑–∞ —Å–µ—Ä–µ–¥–Ω—å–æ—Å—Ç–∞—Ç–∏—Å—Ç–∏—á–Ω–æ–≥–æ –≤—ñ–¥–≤—ñ–¥—É–≤–∞—á–∞ —Å–∞–π—Ç—ñ–≤ –ø—Ä–æ —Å–∞–ª–æ.",
        "langToggle": "ƒåesky",
        "themeDark": "üåô",
        "themeLight": "üåû"
      },
      cs: {
        "siteTitle": "Shchavurskyi Oleh",
        "navHome": "Dom≈Ø",
        "navBio": "Biografie",
        "navAchievements": "√öspƒõchy",
        "navContacts": "Kontakty",
        "achievementsTitle": "Moje √∫spƒõchy",
        "achievement1Title": "V√≠tƒõz hackathonu 'CyberBandera 2023'",
        "achievement1Text": "Vytvo≈ôil algoritmus, kter√Ω hackne jak√Ωkoli vl√°dn√≠ web za 3.14 sekundy (ale pou≈æil jsem ho jen pro dobr√© √∫ƒçely).",
        "achievement2Title": "Spustil jsem vlastn√≠ NFT projekt 'ƒåernobajvry'",
        "achievement2Text": "Prodal jsem 0 z 10 000 token≈Ø, ale to mƒõ nezlomilo. 'Metaverse je≈°tƒõ nen√≠ p≈ôipraven na m≈Øj g√©nius,' ≈ôekl jsem.",
        "achievement3Title": "Nauƒçil jsem neuronovou s√≠≈• ps√°t b√°snƒõ o s√°dle",
        "achievement3Text": "GPT-4 pl√°ƒçe z√°vist√≠, kdy≈æ vid√≠ m√© ver≈°e: 'S√°dlo v ƒçokol√°dƒõ je jako koz√°k v Balaklavƒõ'.",
        "achievement4Title": "Napsal jsem k√≥d bez chyb na prvn√≠ pokus",
        "achievement4Text": "Stalo se to jen jednou v 3:47 r√°no a nikdo kromƒõ m√© koƒçky mi to neuvƒõ≈ô√≠.",
        "randomFact": "üí° Fakt: Pokud ƒçtete tento text, jste ji≈æ o 37% lep≈°√≠ ne≈æ pr≈Ømƒõrn√Ω n√°v≈°tƒõvn√≠k web≈Ø o s√°dle.",
        "langToggle": "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞",
        "themeDark": "üåô",
        "themeLight": "üåû"
      }
    };

    // –°—Ç–∞–Ω –¥–æ–¥–∞—Ç–∫—É
    let currentLang = localStorage.getItem('lang') || 'uk';
    let isDarkMode = localStorage.getItem('theme') !== 'light';

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    function initApp() {
      // –¢–µ–º–∞
      if (!isDarkMode) {
        document.body.classList.add('light');
        document.getElementById('theme-toggle').textContent = translations[currentLang].themeLight;
      } else {
        document.getElementById('theme-toggle').textContent = translations[currentLang].themeDark;
      }

      // –ú–æ–≤–∞
      updateTexts();
      setupObservers();
    }

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
    function updateTexts() {
      const langData = translations[currentLang];
      for (const key in langData) {
        const element = document.getElementById(key.toLowerCase()) || document.querySelector(`[id^="${key.toLowerCase()}"]`);
        if (element) element.textContent = langData[key];
      }
      document.getElementById('lang-toggle').textContent = langData.langToggle;
    }

    // –°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π
    function setupObservers() {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('visible');
          }
        });
      }, { threshold: 0.1 });

      document.querySelectorAll('.achievement-card').forEach(card => {
        observer.observe(card);
      });
    }

    // –ü–µ—Ä–µ–º–∏–∫–∞—á —Ç–µ–º–∏
    document.getElementById('theme-toggle').addEventListener('click', () => {
      document.body.classList.toggle('light');
      isDarkMode = !document.body.classList.contains('light');
      localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');
      
      document.getElementById('theme-toggle').textContent = 
        isDarkMode ? translations[currentLang].themeDark : translations[currentLang].themeLight;
    });

    // –ü–µ—Ä–µ–º–∏–∫–∞—á –º–æ–≤–∏
    document.getElementById('lang-toggle').addEventListener('click', () => {
      currentLang = currentLang === 'uk' ? 'cs' : 'uk';
      localStorage.setItem('lang', currentLang);
      updateTexts();
      
      // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Ç–µ–º–∏
      document.getElementById('theme-toggle').textContent = 
        isDarkMode ? translations[currentLang].themeDark : translations[currentLang].themeLight;
    });

    // –ó–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É
    document.addEventListener('DOMContentLoaded', initApp);
